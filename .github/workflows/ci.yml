name: Skaffold
on:
  push:
    paths:
      - src/**
      - .github/workflows/ci.yml
      - action.yml
jobs:
  pipeline:
    name: Skaffold Pipeline
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Minikube
        uses: hiberbee/github-action-minikube@1.7.0
        with:
          addons: registry

      - name: Setup Helm
        uses: hiberbee/github-action-helm@1.13.0
        with:
          repository-config: test/repositories.yaml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REPOSITORY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Skaffold pipeline as action
        uses: hiberbee/github-action-skaffold@latest
        with:
          command: run
          cache: false
          insecure-registries: localhost:5000
          namespace: default
          repository: ${{ secrets.DOCKER_REPOSITORY }}
          verbosity: info
          working-directory: test

      - name: Run Skaffold pipeline as command
        run: skaffold build --cache-artifacts -v debug
        working-directory: test
        env:
          SKAFFOLD_DEFAULT_REPO: ${{ secrets.SKAFFOLD_DEFAULT_REPO }}
          SKAFFOLD_SKIP_TESTS: true

      - name: Run Skaffold with output
        uses: hiberbee/github-action-skaffold@latest
        with:
          command: build
          output: render.yaml
          repository: ${{ secrets.DOCKER_REPOSITORY }}
          verbosity: info
          working-directory: test

      - name: Run Skaffold with output to YAML
        uses: hiberbee/github-action-skaffold@latest
        with:
          command: build --output=build.yaml
          repository: ${{ secrets.DOCKER_REPOSITORY }}
          working-directory: test

      - name: Run Skaffold with output to JSON
        uses: hiberbee/github-action-skaffold@latest
        id: json
        with:
          command: build --output=tags.json
          repository: ${{ secrets.DOCKER_REPOSITORY }}
          working-directory: test

      - name: Read JSON file output
        run: cat tags.json'

      - name: Read JSON step output
        run: echo '${{ fromJson(steps.json.outputs.builds) }}'

      - name: Get Helm releases
        run: helm list
